{"version":3,"file":"index.936f26c6.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import './style.css';\nimport {Map, View, Feature} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport {Point} from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport {Style} from 'ol/style';\nimport { Icon } from 'ol/style';\nimport {Vector} from 'ol/source';\nimport VectorLayer from 'ol/layer/Vector';\nimport {DragPan, MouseWheelZoom, defaults, DragRotateAndZoom} from 'ol/interaction';\nimport {platformModifierKeyOnly} from 'ol/events/condition';\nimport {toSize} from 'ol/size';\nimport Overlay from 'ol/Overlay';\n\nlet img = document.getElementById('marker');\nconst iconStyle = new Style({\n  image: new Icon({\n      img: img,\n      imgSize: toSize([32,32]),\n  }),\n});\n\nlet icons = [new Feature({\n  geometry: new Point(fromLonLat([26.937323964883692, 36.99901508618826])),\n  name: 'Avra Kalymnos',\n}), new Feature({\n  geometry: new Point(fromLonLat([36, 36.99901508618826])),\n  name: 'Avra turkey',\n})];\n\n\nicons.forEach((icon)=>{\n  icon.setStyle(iconStyle);\n});\n  \n\nconst vectorLayer = new VectorLayer({\n  source: new Vector({\n    features: icons,\n  })\n});\n\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  view: new View({\n    center: fromLonLat([26.937323964883692, 36.99901508618826]),\n    zoom: 10\n  }),\n  interactions: defaults({dragPan: false, mouseWheelZoom: false, dragRotate:false, pinchRotate:false}).extend([\n    new DragPan({\n      condition: function (event) {\n        return this.getPointerCount() === 2 || platformModifierKeyOnly(event) || (event.type==\"pointerdown\" && event.originalEvent.pointerType==\"mouse\");\n      },\n    }),\n    new MouseWheelZoom({\n      condition: platformModifierKeyOnly,\n    }),\n  ]),\n});\n\n\n//add popup \nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element\n});\nmap.addOverlay(popup);\n\n// display popup on click\nmap.addEventListener('click', function (evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n  let msg = popup.getElement();\n  if (feature) {  //if a marker was clicked\n    popup.setPosition(evt.coordinate);\n    msg.innerText = feature.get('name'); //set the message\n    msg.classList.add('visible');\n  }else\n    msg.classList.remove('visible');\n});"],"names":[],"mappings":";AAAA,MAAM,IAAI,oBAAoB;AAC1B,QAAM,UAAU,SAAS,cAAc,QAAQ;AAC/C,MAAI,WAAW,QAAQ,YAAY,QAAQ,SAAS,kBAAkB;AAClE;AAAA;AAEJ,aAAW,QAAQ,SAAS,iBAAiB,8BAA8B;AACvE,mBAAe;AAAA;AAEnB,MAAI,iBAAiB,CAAC,cAAc;AAChC,eAAW,YAAY,WAAW;AAC9B,UAAI,SAAS,SAAS,aAAa;AAC/B;AAAA;AAEJ,iBAAW,QAAQ,SAAS,YAAY;AACpC,YAAI,KAAK,YAAY,UAAU,KAAK,QAAQ;AACxC,yBAAe;AAAA;AAAA;AAAA,KAG5B,QAAQ,UAAU,EAAE,WAAW,MAAM,SAAS;AACjD,wBAAsB,QAAQ;AAC1B,UAAM,YAAY;AAClB,QAAI,OAAO;AACP,gBAAU,YAAY,OAAO;AACjC,QAAI,OAAO;AACP,gBAAU,iBAAiB,OAAO;AACtC,QAAI,OAAO,gBAAgB;AACvB,gBAAU,cAAc;AAAA,aACnB,OAAO,gBAAgB;AAC5B,gBAAU,cAAc;AAAA;AAExB,gBAAU,cAAc;AAC5B,WAAO;AAAA;AAEX,0BAAwB,MAAM;AAC1B,QAAI,KAAK;AAEL;AACJ,SAAK,KAAK;AAEV,UAAM,YAAY,aAAa;AAC/B,UAAM,KAAK,MAAM;AAAA;AAAA;AAEvB,AAAoB;;AC3BtB,IAAI,MAAM,SAAS,eAAe;AAClC,MAAM,YAAY,IAAI,MAAM;AAAA,EAC1B,OAAO,IAAI,KAAK;AAAA,IACZ;AAAA,IACA,SAAS,OAAO,CAAC,IAAG;AAAA;AAAA;AAI1B,IAAI,QAAQ,CAAC,IAAI,QAAQ;AAAA,EACvB,UAAU,IAAI,MAAM,WAAW,CAAC,oBAAoB;AAAA,EACpD,MAAM;AAAA,IACJ,IAAI,QAAQ;AAAA,EACd,UAAU,IAAI,MAAM,WAAW,CAAC,IAAI;AAAA,EACpC,MAAM;AAAA;AAIR,MAAM,QAAQ,CAAC,SAAO;AACpB,OAAK,SAAS;AAAA;AAIhB,MAAM,cAAc,IAAI,YAAY;AAAA,EAClC,QAAQ,IAAI,OAAO;AAAA,IACjB,UAAU;AAAA;AAAA;AAKd,MAAM,MAAM,IAAI,IAAI;AAAA,EAClB,QAAQ;AAAA,EACR,QAAQ;AAAA,IACN,IAAI,UAAU;AAAA,MACZ,QAAQ,IAAI;AAAA;AAAA,IAEd;AAAA;AAAA,EAEF,MAAM,IAAI,KAAK;AAAA,IACb,QAAQ,WAAW,CAAC,oBAAoB;AAAA,IACxC,MAAM;AAAA;AAAA,EAER,cAAc,SAAS,EAAC,SAAS,OAAO,gBAAgB,OAAO,YAAW,OAAO,aAAY,SAAQ,OAAO;AAAA,IAC1G,IAAI,QAAQ;AAAA,MACV,WAAW,SAAU,OAAO;AAC1B,eAAO,KAAK,sBAAsB,KAAK,wBAAwB,UAAW,MAAM,QAAM,iBAAiB,MAAM,cAAc,eAAa;AAAA;AAAA;AAAA,IAG5I,IAAI,eAAe;AAAA,MACjB,WAAW;AAAA;AAAA;AAAA;AAOjB,MAAM,UAAU,SAAS,eAAe;AAExC,MAAM,QAAQ,IAAI,QAAQ;AAAA,EACxB;AAAA;AAEF,IAAI,WAAW;AAGf,IAAI,iBAAiB,SAAS,SAAU,KAAK;AAC3C,QAAM,UAAU,IAAI,sBAAsB,IAAI,OAAO,SAAU,UAAS;AACtE,WAAO;AAAA;AAET,MAAI,MAAM,MAAM;AAChB,MAAI,SAAS;AACX,UAAM,YAAY,IAAI;AACtB,QAAI,YAAY,QAAQ,IAAI;AAC5B,QAAI,UAAU,IAAI;AAAA;AAElB,QAAI,UAAU,OAAO;AAAA;"}